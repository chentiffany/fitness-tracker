[{"/Users/tiffanychen/cse330/tracker/tracker/src/index.js":"1","/Users/tiffanychen/cse330/tracker/tracker/src/App.js":"2","/Users/tiffanychen/cse330/tracker/tracker/src/firebase.js":"3","/Users/tiffanychen/cse330/tracker/tracker/src/reportWebVitals.js":"4"},{"size":535,"mtime":1650947281592,"results":"5","hashOfConfig":"6"},{"size":11336,"mtime":1651034593530,"results":"7","hashOfConfig":"6"},{"size":1171,"mtime":1651029527688,"results":"8","hashOfConfig":"6"},{"size":362,"mtime":1650943277580,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1jm3nku",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tiffanychen/cse330/tracker/tracker/src/index.js",[],[],[],"/Users/tiffanychen/cse330/tracker/tracker/src/App.js",["25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42"],[],"import { useRef, useState, useEffect } from \"react\";\nimport { signup, login, logout, useAuth, db } from \"./firebase\";\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc} from \"firebase/firestore\";\nimport { deleteUser } from \"firebase/auth\";\nimport \"./App.css\"\n\nexport default function App() {\n  const [loading, setLoading] = useState(false);\n  const currentUser = useAuth();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [newName, setNewName] = useState(\"\");\n  const [newAge, setNewAge] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const usersCollectionRef = collection(db, \"users\");\n  const [forum, setForum] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [contents, setContents] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const forumColletionRef = collection(db, \"forum\");\n\n  const [day, setDay] = useState(\"\");\n  const [workout, setWorkout] = useState(\"\");\n  const [workoutPlan, setWorkoutPlan] = useState([]);\n  const workoutColletionRef = collection(db, \"workout\");\n\n  async function addWorkout() {\n    setLoading(true);\n    await addDoc(workoutColletionRef, {workout: workout, day: day});\n    setLoading(false);\n  };\n  const getWorkout = async () => {\n    const data = await getDocs (workoutColletionRef);\n    setWorkoutPlan(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n  }\n  getWorkout();\n  \n\n\n  async function createPlan() {\n    setLoading(true);\n    await addDoc(forumColletionRef, {author: author, title:title, contents: contents, link:link, vote: 0});\n    setLoading(false);\n  };\n  const deletePost = async (id) => {\n    const userDoc = doc (db, \"forum\", id);\n    await deleteDoc(userDoc);\n  }\n  const addVote = async (id, vote) => {\n    const userDoc = doc (db, \"forum\", id);\n    const newFields = {vote: vote + 1}\n    await updateDoc(userDoc, newFields);\n  }\n  const subtractVote = async (id, vote) => {\n    const userDoc = doc (db, \"forum\", id);\n    const newFields = {vote: vote - 1}\n    await updateDoc(userDoc, newFields);\n  }\n  const getForum = async () => {\n    const data = await getDocs (forumColletionRef);\n    setForum(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n  }\n  getForum();\n\n  async function createUser() {\n    setLoading(true);\n    await addDoc(usersCollectionRef, {name: newName, age: Number(newAge)});\n    setLoading(false);\n  };\n  const deleteUser = async (id) => {\n    const userDoc = doc (db, \"users\", id);\n    await deleteDoc(userDoc);\n  }\n\n  const getUsers = async () => {\n    const data = await getDocs (usersCollectionRef);\n    setUsers(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n  }\n  getUsers();\n\n  async function handleSignup() {\n    setLoading(true);\n    await signup(emailRef.current.value, passwordRef.current.value);\n    setLoading(false);\n  }\n\n  async function handleLogin() {\n    setLoading(true);\n    try {\n      await login(emailRef.current.value, passwordRef.current.value);\n    } catch {\n      alert(\"Error!\");\n    }\n    setLoading(false);\n  }\n\n  async function handleLogout() {\n    setLoading(true);\n    try {\n      await logout();\n    } catch {\n      alert(\"Error!\");\n    }\n    setLoading(false);\n  }\n\n  const Line = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 1\n        }}\n    />\n  );\n\n  return (\n    <div className=\"App\">\n      {currentUser? \"\" : \n      <div id=\"center_login\">\n        <div id=\"login\">\n          <div>\n            <div id=\"title\">sign up or login!</div> {\" \"}\n              <div id=\"fields\">\n                <div>\n                  <input ref={emailRef} placeholder=\"Email\" />\n                </div>\n                <div>\n                  <input ref={passwordRef} type=\"password\" placeholder=\"Password\" />\n                </div>\n              </div>\n              <button onClick={handleSignup}>\n                Sign Up\n              </button>\n              <button onClick={handleLogin}>\n                Log In\n              </button>\n          </div>  \n        </div>\n      </div>\n      }\n      {currentUser? \n      <div>\n        <div id=\"todo\">\n          <div id=\"title\">Hi, { currentUser?.email } </div>\n          <button id=\"logout_button\" onClick={handleLogout}>\n            Log Out\n        </button>\n          <div>\n            Goals\n          </div>\n            <input placeholder=\"Workout\" onChange= {(event) => {\n              setNewName(event.target.value);\n              }}\n            />\n            <input type=\"number\" placeholder=\"Reps\" onChange= {(event) => {\n              setNewAge(event.target.value);\n              }}\n            />\n            <button onClick ={createUser}> Create </button>\n            {users.map((user) =>{\n              return(\n                <div>\n                  <input type=\"checkbox\"/>\n                  Workout: {user.name},\n                  Reps: {user.age} {\" \"}\n                  <button onClick = {() => {deleteUser(user.id)}}>Delete</button>\n                  {\" \"}\n                </div>  \n              );\n            })}\n            {\" \"}\n            <div>\n              <h3>Workout Plan</h3>\n              <select placeholder=\"day\"  onChange= {(event) => {\n                setDay(event.target.value);\n              }}>\n                <option id=\"monday\"> Monday</option>\n                <option id=\"tuesday\">Tuesday</option>\n                <option id=\"wednesday\"> Wednesday</option>\n                <option id=\"thursday\">Thursday</option>\n                <option id=\"friday\">Friday</option>\n                <option id=\"saturday\"> Saturday</option>\n                <option id=\"sunday\">Sunday</option> \n              </select>\n              <input placeholder=\"workday\" onChange= {(event) => {\n                setWorkout(event.target.value);\n                }}\n              />\n              <button onClick ={addWorkout}> Add </button>\n              <table>\n                <thead>\n                <tr>\n                  <th>Sunday</th>\n                  <th>Monday</th>\n                  <th>Tuesday</th>\n                  <th>Wednesday</th>\n                  <th>Thursday</th>\n                  <th>Friday</th>\n                  <th>Saturday</th>\n                </tr>\n                <tr>\n                  <td id=\"sunday\">\n                    {workoutPlan.map((user) =>{\n                      var day = user.day;\n                      if (day==\"Sunday\"){\n                        return(\n                          <div>\n                            {user.workout}\n                          </div>\n                        );\n                      }\n                    })}\n                  </td>\n                  <td id=\"monday\">\n                  {workoutPlan.map((user) =>{\n                      var day = user.day;\n                      if (day==\"Monday\"){\n                        return(\n                          <div>\n                            {user.workout}\n                          </div>\n                        );\n                      }\n                    })}\n                  </td>\n                  <td id=\"tuesday\">\n                  {workoutPlan.map((user) =>{\n                      var day = user.day;\n                      if (day==\"Tuesday\"){\n                        return(\n                          <div>\n                            {user.workout}\n                          </div>\n                        );\n                      }\n                    })}\n                  </td>\n                  <td id=\"wednesday\">\n                  {workoutPlan.map((user) =>{\n                      var day = user.day;\n                      if (day==\"Wednesday\"){\n                        return(\n                          <div>\n                            {user.workout}\n                          </div>\n                        );\n                      }\n                    })}\n                  </td>\n                  <td id=\"thursday\">\n                  {workoutPlan.map((user) =>{\n                      var day = user.day;\n                      if (day==\"Thursday\"){\n                        return(\n                          <div>\n                            {user.workout}\n                          </div>\n                        );\n                      }\n                    })}\n                  </td>\n                  <td id=\"friday\">\n                  {workoutPlan.map((user) =>{\n                      var day = user.day;\n                      if (day==\"Friday\"){\n                        return(\n                          <div>\n                            {user.workout}\n                          </div>\n                        );\n                      }\n                    })}\n                  </td>\n                  <td id=\"saturday\">\n                  {workoutPlan.map((user) =>{\n                      var day = user.day;\n                      if (day==\"Saturday\"){\n                        return(\n                          <div>\n                            {user.workout}\n                          </div>\n                        );\n                      }\n                    })}\n                  </td>\n                </tr>\n                </thead>\n              </table>\n            </div>\n        </div>\n        </div>\n      : \" \" }\n      <div id=\"forum\">\n          {currentUser? \n          <div>\n            <h3>Workout Forum</h3>\n            <input placeholder=\"Author Name\" onChange= {(event) => {\n              setAuthor(event.target.value);\n              }}\n            />\n            <input placeholder=\"Title\" onChange= {(event) => {\n              setTitle(event.target.value);\n              }}\n            />\n            <div>\n              <input placeholder=\"Contents\" onChange= {(event) => {\n                setContents(event.target.value);\n                }}\n              />\n              <input placeholder=\"Link\" onChange= {(event) => {\n                setLink(event.target.value);\n                }}\n              />\n            </div>\n              <button onClick ={createPlan}> Post </button>\n            {forum.map((user) =>{\n              return(\n                <div>\n                  <div>\n                    Author: {user.author} {\" \"}\n                  </div>\n                  <div>\n                    Title: {user.title} {\" \"}\n                  </div>\n                  <div>\n                    Contents: {user.contents} {\" \"}\n                  </div>\n                  <div>\n                    Link: <a href={ 'https://' + user.link }>{user.link}</a> {\" \"}\n                  </div>\n                  <div>\n                    Vote: \n                    <button onClick = {() => {\n                    subtractVote(user.id, user.vote);\n                    }}\n                    > \n                    &#8595;\n                    </button>\n                    {user.vote}\n                    <button onClick = {() => {\n                    addVote(user.id, user.vote);\n                    }}\n                    > \n                    &#8593;\n                    </button>\n                   {\" \"}\n                  </div>\n                  <button onClick = {() => {deletePost(user.id)}}>Delete Post </button>\n                  {\" \"}\n                </div>  \n              );}\n            )}\n            </div>\n            : \" \"}\n            {\" \"}\n        </div>\n    </div>\n  );\n}","/Users/tiffanychen/cse330/tracker/tracker/src/firebase.js",[],[],[],"/Users/tiffanychen/cse330/tracker/tracker/src/reportWebVitals.js",[],[],{"ruleId":"43","severity":1,"message":"44","line":1,"column":28,"nodeType":"45","messageId":"46","endLine":1,"endColumn":37},{"ruleId":"43","severity":1,"message":"47","line":4,"column":10,"nodeType":"45","messageId":"46","endLine":4,"endColumn":20},{"ruleId":"43","severity":1,"message":"48","line":8,"column":10,"nodeType":"45","messageId":"46","endLine":8,"endColumn":17},{"ruleId":"43","severity":1,"message":"49","line":108,"column":9,"nodeType":"45","messageId":"46","endLine":108,"endColumn":13},{"ruleId":"50","severity":1,"message":"51","line":205,"column":45,"nodeType":"52","messageId":"53","endLine":205,"endColumn":47},{"ruleId":"54","severity":1,"message":"55","line":207,"column":30,"nodeType":"56","messageId":"57","endLine":207,"endColumn":32},{"ruleId":"50","severity":1,"message":"51","line":217,"column":43,"nodeType":"52","messageId":"53","endLine":217,"endColumn":45},{"ruleId":"54","severity":1,"message":"55","line":219,"column":30,"nodeType":"56","messageId":"57","endLine":219,"endColumn":32},{"ruleId":"50","severity":1,"message":"51","line":229,"column":43,"nodeType":"52","messageId":"53","endLine":229,"endColumn":45},{"ruleId":"54","severity":1,"message":"55","line":231,"column":30,"nodeType":"56","messageId":"57","endLine":231,"endColumn":32},{"ruleId":"50","severity":1,"message":"51","line":241,"column":43,"nodeType":"52","messageId":"53","endLine":241,"endColumn":45},{"ruleId":"54","severity":1,"message":"55","line":243,"column":30,"nodeType":"56","messageId":"57","endLine":243,"endColumn":32},{"ruleId":"50","severity":1,"message":"51","line":253,"column":43,"nodeType":"52","messageId":"53","endLine":253,"endColumn":45},{"ruleId":"54","severity":1,"message":"55","line":255,"column":30,"nodeType":"56","messageId":"57","endLine":255,"endColumn":32},{"ruleId":"50","severity":1,"message":"51","line":265,"column":43,"nodeType":"52","messageId":"53","endLine":265,"endColumn":45},{"ruleId":"54","severity":1,"message":"55","line":267,"column":30,"nodeType":"56","messageId":"57","endLine":267,"endColumn":32},{"ruleId":"50","severity":1,"message":"51","line":277,"column":43,"nodeType":"52","messageId":"53","endLine":277,"endColumn":45},{"ruleId":"54","severity":1,"message":"55","line":279,"column":30,"nodeType":"56","messageId":"57","endLine":279,"endColumn":32},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'deleteUser' is defined but never used.","'loading' is assigned a value but never used.","'Line' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]